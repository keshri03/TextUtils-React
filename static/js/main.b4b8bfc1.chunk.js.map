{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","changegreen","changered","changeyellow","TextForm","wordCount","content","arr","split","len","length","count","i","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","join","Alert","alert","word","lower","charAt","slice","capitalise","msg","defaultProps","aboutText","App","Mode","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b4b8bfc1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\"> */}\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>    */}\r\n              {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>    */}\r\n            {/* </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          <div className=\"dropdown mx-4\">\r\n            <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Change Background\r\n            </button>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" onClick={props.changegreen} href=\"#\">Green</a></li>\r\n              <li><a className=\"dropdown-item\" onClick={props.changered} href=\"#\">Red</a></li>\r\n              <li><a className=\"dropdown-item\" onClick={props.changeyellow} href=\"#\">Yellow</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    };\r\n    const handleLoclick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    };\r\n    const handleclearclick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text was cleared\",\"success\");\r\n    };\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n        // props.showAlert(\"Extra Spaces were removed\",\"success\");\r\n    };\r\n    const HandleExtraSpaces=()=>{\r\n        let newText= text.split(/[ ]+/); // rejex\r\n        setText(newText.join(\" \"));\r\n    }\r\n    function wordCount(content){ \r\n        if(content===\"\"){\r\n          return 0;\r\n        }\r\n        let arr = content.split(\" \");\r\n        let len = arr.length;\r\n        let count=0;\r\n        \r\n        for(let i=0;i<len;i++){\r\n          if(arr[i]==='' || arr[i]===' '){\r\n             count++;\r\n          }\r\n        }\r\n        return len-count;\r\n      }\r\n    const [text, setText] = useState(\"\");\r\n    // text=\"random text\"; wrong\r\n    // setText('new text 2');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white' : '#011827e8'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={text}\r\n                        onChange={handleOnChange}\r\n                        style={{backgroundColor: props.mode==='dark'?'grey': 'white',color: props.mode==='dark'?'white': '#011827e8'}}\r\n                        id=\"myBox\"\r\n                        rows=\"8\"\r\n                    ></textarea>\r\n                    <button className=\"btn-primary mx-2 my-1\" onClick={handleUpclick}>\r\n                        Convert to uppercase\r\n                    </button>\r\n                    <button className=\"btn-primary mx-2 my-1\" onClick={handleLoclick}>\r\n                        Convert to lowercasecase\r\n                    </button>\r\n                    <button className=\"btn-primary mx-2 my-1\" onClick={handleclearclick}>\r\n                        clear Text\r\n                    </button>\r\n                    <button className=\"btn-primary mx-2 my-1\" onClick={HandleExtraSpaces}>\r\n                        Remove Extra Spaces\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"continer my-3\" style={{color: props.mode==='dark'?'white' : '#011827e8'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>\r\n                    {wordCount(text)} words and {text.length} charcters\r\n                </p>\r\n                <p>{0.008 * wordCount(text)} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{wordCount(text)>0?text: \"Enter something in textbox above to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalise=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalise(props.alert.type)}</strong> : {props.alert.msg}\r\n   \r\n</div>\r\n  )\r\n}\r\n\r\n{/* <Router>\r\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n<Alert alert={alert} />\r\n<div className=\"container mt-3\">\r\n  <Routes>\r\n    <Route exact path=\"/about\" element={<About />}> </Route>\r\n    <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode} />}></Route>\r\n  </Routes>\r\n</div>\r\n</Router>\r\n</>\r\n\r\nthis is my code which is working just fine check it and make correction in your code agar ab bhi error aaye to....\r\n\r\n1. react router ka dom ka latest version install h ki nhi check krna ya dobara install kr lena\r\n2. kuch syntex error kr rakhi hogi khi pe dhyan se dekho ho jati h kabhi kabhi mistake aur pta nhi chlta h\r\n3. import bhi check kr lena \r\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\"; */}\r\n","// import './App.css';np\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import { \n//   BrowserRouter as Router,\n//    Route, \n//    Routes\n//   } from \"react-router-dom\";\n \n\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const changegreen = ()=>{\n    document.body.style.backgroundColor = '#35C649'\n  }\n  const changeyellow = ()=>{\n    document.body.style.backgroundColor = '#CAB911'\n  }\n  const changered = ()=>{\n    document.body.style.backgroundColor = '#C15031'\n  }\n  \n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n      \n    }, 1500);\n\n  }\n\n  const toggleMode = ()=>{\n    if(Mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#011827e8';\n      showAlert(\"Dark mode enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n  {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n  {/* <Router> */}\n<Navbar title=\"TextUtils\" mode={Mode} toggleMode={toggleMode} changegreen={changegreen} changeyellow={changeyellow} changered={changered} />\n<Alert alert={alert} />\n<div className=\"container mt-3\">\n  {/* <Routes> */}\n    {/* <Route exact path=\"/about\" element={<About />}> </Route> */}\n    {/* <Route exact path=\"/\" element={ */}\n    <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={Mode} />\n    {/* </Route> */}\n  {/* </Routes> */}\n</div>\n{/* </Router> */}\n  </>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}